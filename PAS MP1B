{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"14mreAvVb6YjLCvW15SGUBw-0sk8PCIoF","authorship_tag":"ABX9TyPGznyijr3UHyabckCOTxCt"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["!pip install pandas"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YA89XuPteT62","executionInfo":{"status":"ok","timestamp":1732972921587,"user_tz":-420,"elapsed":10311,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"e6bff63f-2489-4268-c46f-a90db5f758a2"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.2.2)\n","Requirement already satisfied: numpy>=1.22.4 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.26.4)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","file_path = \"/content/drive/MyDrive/mp1b/Disease_symptom_and_patient_profile_dataset.csv\"\n","\n","df = pd.read_csv(file_path)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"FPjZs4L5qRR2","executionInfo":{"status":"ok","timestamp":1732972922973,"user_tz":-420,"elapsed":1400,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"5f2ca7aa-fd57-435e-da4a-ac4194882409"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Disease Fever Cough Fatigue Difficulty Breathing  Age  Gender  \\\n","0    Influenza   Yes    No     Yes                  Yes   19  Female   \n","1  Common Cold    No   Yes     Yes                   No   25  Female   \n","2       Eczema    No   Yes     Yes                   No   25  Female   \n","3       Asthma   Yes   Yes      No                  Yes   25    Male   \n","4       Asthma   Yes   Yes      No                  Yes   25    Male   \n","\n","  Blood Pressure Cholesterol Level Outcome Variable  \n","0            Low            Normal         Positive  \n","1         Normal            Normal         Negative  \n","2         Normal            Normal         Negative  \n","3         Normal            Normal         Positive  \n","4         Normal            Normal         Positive  "],"text/html":["\n","  <div id=\"df-45c03cbc-7e7d-438d-ac36-87d54cff0141\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Disease</th>\n","      <th>Fever</th>\n","      <th>Cough</th>\n","      <th>Fatigue</th>\n","      <th>Difficulty Breathing</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Blood Pressure</th>\n","      <th>Cholesterol Level</th>\n","      <th>Outcome Variable</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Influenza</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>19</td>\n","      <td>Female</td>\n","      <td>Low</td>\n","      <td>Normal</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Common Cold</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>25</td>\n","      <td>Female</td>\n","      <td>Normal</td>\n","      <td>Normal</td>\n","      <td>Negative</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Eczema</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>25</td>\n","      <td>Female</td>\n","      <td>Normal</td>\n","      <td>Normal</td>\n","      <td>Negative</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Asthma</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>25</td>\n","      <td>Male</td>\n","      <td>Normal</td>\n","      <td>Normal</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Asthma</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>25</td>\n","      <td>Male</td>\n","      <td>Normal</td>\n","      <td>Normal</td>\n","      <td>Positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-45c03cbc-7e7d-438d-ac36-87d54cff0141')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-45c03cbc-7e7d-438d-ac36-87d54cff0141 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-45c03cbc-7e7d-438d-ac36-87d54cff0141');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f54e9353-b655-41d9-b9be-d5993eb6c6a5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f54e9353-b655-41d9-b9be-d5993eb6c6a5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f54e9353-b655-41d9-b9be-d5993eb6c6a5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 349,\n  \"fields\": [\n    {\n      \"column\": \"Disease\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 116,\n        \"samples\": [\n          \"Pneumothorax\",\n          \"Hyperthyroidism\",\n          \"Malaria\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fever\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cough\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fatigue\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Difficulty Breathing\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 19,\n        \"max\": 90,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          38,\n          52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Blood Pressure\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Low\",\n          \"Normal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cholesterol Level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Normal\",\n          \"Low\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outcome Variable\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Negative\",\n          \"Positive\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["disease = {\n","    'umur' : [19, 21, 25, 27, 19, 20],\n","    'tinggi': [155, 157, 158, 170, 175, 177 ],\n","    'berat': [40, 43, 45, 55, 57, 58],\n","    'jk' : [ 'wanita', 'wanita', 'wanita', 'pria', 'pria', 'pria'],\n","    'penyakit' : ['pusing', 'pilek', 'batuk', 'asma', 'demam', 'pusing']\n","}\n","disease_df = pd.DataFrame(disease)\n","disease_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"nU_NREEMuQH0","executionInfo":{"status":"ok","timestamp":1732976736925,"user_tz":-420,"elapsed":295,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"8d04a142-fec8-437f-fa6a-cd06c60f9b71"},"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   umur  tinggi  berat      jk penyakit\n","0    19     155     40  wanita   pusing\n","1    21     157     43  wanita    pilek\n","2    25     158     45  wanita    batuk\n","3    27     170     55    pria     asma\n","4    19     175     57    pria    demam\n","5    20     177     58    pria   pusing"],"text/html":["\n","  <div id=\"df-95832690-940d-4da5-ba69-a7ecb7f9fddd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>umur</th>\n","      <th>tinggi</th>\n","      <th>berat</th>\n","      <th>jk</th>\n","      <th>penyakit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>155</td>\n","      <td>40</td>\n","      <td>wanita</td>\n","      <td>pusing</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>21</td>\n","      <td>157</td>\n","      <td>43</td>\n","      <td>wanita</td>\n","      <td>pilek</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>25</td>\n","      <td>158</td>\n","      <td>45</td>\n","      <td>wanita</td>\n","      <td>batuk</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>27</td>\n","      <td>170</td>\n","      <td>55</td>\n","      <td>pria</td>\n","      <td>asma</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>19</td>\n","      <td>175</td>\n","      <td>57</td>\n","      <td>pria</td>\n","      <td>demam</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>20</td>\n","      <td>177</td>\n","      <td>58</td>\n","      <td>pria</td>\n","      <td>pusing</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-95832690-940d-4da5-ba69-a7ecb7f9fddd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-95832690-940d-4da5-ba69-a7ecb7f9fddd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-95832690-940d-4da5-ba69-a7ecb7f9fddd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a02fe68d-4539-48a3-ab19-6e0d236c7f7c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a02fe68d-4539-48a3-ab19-6e0d236c7f7c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a02fe68d-4539-48a3-ab19-6e0d236c7f7c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3ffb12aa-5637-4322-a575-d7ac24d73f58\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('disease_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3ffb12aa-5637-4322-a575-d7ac24d73f58 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('disease_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"disease_df","summary":"{\n  \"name\": \"disease_df\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"umur\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 19,\n        \"max\": 27,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          21,\n          20,\n          25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tinggi\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 155,\n        \"max\": 177,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          155,\n          157,\n          177\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"berat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 40,\n        \"max\": 58,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          40,\n          43,\n          58\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"jk\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"pria\",\n          \"wanita\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"penyakit\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"pilek\",\n          \"demam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","fig, ax = plt.subplots()\n","for jk, d in disease_df.groupby('jk'):\n","  ax.scatter(d['tinggi'], d['penyakit'], label=jk)\n","\n","plt.legend(loc='upper left')\n","plt.title('Sebaran Data tinggi badan, Jenis kelamin dan Penyakit')\n","plt.xlabel('Tinggi')\n","plt.ylabel('Penyakit')\n","plt.grid(True)\n","plt.show()"],"metadata":{"id":"almgOsjly2Tt","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1732976799711,"user_tz":-420,"elapsed":617,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"175c3153-c624-4540-bcec-f8ace9f2de53"},"execution_count":73,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","x_train = np.array(disease_df[['tinggi', 'berat']])\n","y_train = np.array(disease_df['jk'])\n","\n","print(f'x_train:\\n{x_train}\\n')\n","print(f'y_train: {y_train}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4n8GsN1IPMg_","executionInfo":{"status":"ok","timestamp":1732977159807,"user_tz":-420,"elapsed":273,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"363245e2-af90-46a0-a8e0-cebea9baa19e"},"execution_count":79,"outputs":[{"output_type":"stream","name":"stdout","text":["x_train:\n","[[155  40]\n"," [157  43]\n"," [158  45]\n"," [170  55]\n"," [175  57]\n"," [177  58]]\n","\n","y_train: ['wanita' 'wanita' 'wanita' 'pria' 'pria' 'pria']\n"]}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelBinarizer\n","\n","lb = LabelBinarizer()\n","y_train = lb.fit_transform(y_train)\n","print(f'y_train: {y_train}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UN46ZncGPy00","executionInfo":{"status":"ok","timestamp":1732977164443,"user_tz":-420,"elapsed":306,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"1224898a-857b-4cc8-8711-48f5e2b786e2"},"execution_count":80,"outputs":[{"output_type":"stream","name":"stdout","text":["y_train: [[1]\n"," [1]\n"," [1]\n"," [0]\n"," [0]\n"," [0]]\n"]}]},{"cell_type":"code","source":["y_train = y_train.flatten()\n","print(f'y_train: {y_train}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UsbVKCfpQQ80","executionInfo":{"status":"ok","timestamp":1732977167081,"user_tz":-420,"elapsed":279,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"962af7e5-30ce-44af-a429-20e062edf6fa"},"execution_count":81,"outputs":[{"output_type":"stream","name":"stdout","text":["y_train: [1 1 1 0 0 0]\n"]}]},{"source":["from sklearn.neighbors import KNeighborsClassifier\n","K = 3\n","model = KNeighborsClassifier(n_neighbors=K)\n","model.fit(x_train, y_train)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"BJ0XmlluX6nb","executionInfo":{"status":"ok","timestamp":1732977168957,"user_tz":-420,"elapsed":314,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"d7581994-077a-429c-923f-675ea56325d9"},"execution_count":82,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier(n_neighbors=3)"],"text/html":["<style>#sk-container-id-11 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-11 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-11 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-11 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-11 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-11 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-11 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-11 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-11 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-11 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-11 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-11 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-11 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-11 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-11 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-11 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-11 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-11 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-11 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-11 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-11 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-11 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-11 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-11 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-11 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-11 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-11 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-11 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-11 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-11 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-11 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-11 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-11 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-11 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-11 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-11 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-11 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-11 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-11 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-11 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-11 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-11 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-11\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=3)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" checked><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KNeighborsClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.neighbors.KNeighborsClassifier.html\">?<span>Documentation for KNeighborsClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsClassifier(n_neighbors=3)</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["tinggi = 170\n","umur = 20\n","\n","X_new = np.array([[tinggi, umur]]).reshape(1, -1)\n","X_new"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-qkgNsWLZ2xf","executionInfo":{"status":"ok","timestamp":1732977176179,"user_tz":-420,"elapsed":290,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"3c80cf73-5a9b-4bab-e2f2-2adeee154aa7"},"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[170,  20]])"]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["y_new = model.predict(X_new)\n","y_new"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ka1YKKBYaL4k","executionInfo":{"status":"ok","timestamp":1732977178406,"user_tz":-420,"elapsed":262,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"7f6e8115-84d2-42ca-c5a7-28a6a2ee603c"},"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1])"]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["lb.inverse_transform(y_new)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WK3vijhgauka","executionInfo":{"status":"ok","timestamp":1732977180261,"user_tz":-420,"elapsed":275,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"e9c18189-843d-4651-87c5-e9abddc1845a"},"execution_count":85,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['wanita'], dtype='<U6')"]},"metadata":{},"execution_count":85}]},{"source":["import matplotlib.pyplot as plt\n","\n","fig, ax = plt.subplots()\n","for jk, d in disease_df.groupby('jk'):\n","  ax.scatter(d['tinggi'], d['berat'], label=jk)\n","\n","plt.scatter(tinggi,\n","            berat,\n","            marker='s',\n","            color='red', label='misterius')\n","\n","plt.legend(loc='upper left')\n","plt.title('Sebaran Data Tinggi badan, Berat badan dan Jenis kelamin')\n","plt.xlabel('Tinggi')\n","plt.ylabel('Penyakit')\n","plt.show()"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"n2pLkqNBh7H-","executionInfo":{"status":"ok","timestamp":1732977951997,"user_tz":-420,"elapsed":762,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"1106e1f8-c00f-423d-e99e-7348c9136067"},"execution_count":93,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["misterius = np.array([tinggi, berat])\n","misterius"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"waqNsNySiS0X","executionInfo":{"status":"ok","timestamp":1732978208947,"user_tz":-420,"elapsed":288,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"25c603c4-2607-4da5-8960-25c3a277a9bc"},"execution_count":94,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([170,  70])"]},"metadata":{},"execution_count":94}]},{"cell_type":"code","source":["x_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F5GsplzzjhtA","executionInfo":{"status":"ok","timestamp":1732978303346,"user_tz":-420,"elapsed":299,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"ad889702-c70a-467d-ad1b-59c28be56145"},"execution_count":95,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[155,  40],\n","       [157,  43],\n","       [158,  45],\n","       [170,  55],\n","       [175,  57],\n","       [177,  58]])"]},"metadata":{},"execution_count":95}]},{"cell_type":"code","source":["from scipy.spatial.distance import euclidean\n","\n","data_jarak = [euclidean(misterius, x) for x in x_train]\n","data_jarak"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AtnV6WNBjnW1","executionInfo":{"status":"ok","timestamp":1732978669150,"user_tz":-420,"elapsed":318,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"0a178d05-9496-49c9-8dbb-d52d8c1b4c56"},"execution_count":96,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[33.54101966249684,\n"," 29.966648127543394,\n"," 27.730849247724095,\n"," 15.0,\n"," 13.92838827718412,\n"," 13.892443989449804]"]},"metadata":{},"execution_count":96}]},{"cell_type":"code","source":["disease_df['jarak'] = data_jarak\n","disease_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"DUwadJq1lAoc","executionInfo":{"status":"ok","timestamp":1732978818481,"user_tz":-420,"elapsed":305,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"16d32175-54a3-4243-a771-86cda96b16b1"},"execution_count":97,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   umur  tinggi  berat      jk penyakit  penyakit_encoded      jarak\n","0    19     155     40  wanita   pusing                 4  33.541020\n","1    21     157     43  wanita    pilek                 3  29.966648\n","2    25     158     45  wanita    batuk                 1  27.730849\n","3    27     170     55    pria     asma                 0  15.000000\n","4    19     175     57    pria    demam                 2  13.928388\n","5    20     177     58    pria   pusing                 4  13.892444"],"text/html":["\n","  <div id=\"df-eaee3971-43fb-4a8f-915e-525ad4df1f0f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>umur</th>\n","      <th>tinggi</th>\n","      <th>berat</th>\n","      <th>jk</th>\n","      <th>penyakit</th>\n","      <th>penyakit_encoded</th>\n","      <th>jarak</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>155</td>\n","      <td>40</td>\n","      <td>wanita</td>\n","      <td>pusing</td>\n","      <td>4</td>\n","      <td>33.541020</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>21</td>\n","      <td>157</td>\n","      <td>43</td>\n","      <td>wanita</td>\n","      <td>pilek</td>\n","      <td>3</td>\n","      <td>29.966648</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>25</td>\n","      <td>158</td>\n","      <td>45</td>\n","      <td>wanita</td>\n","      <td>batuk</td>\n","      <td>1</td>\n","      <td>27.730849</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>27</td>\n","      <td>170</td>\n","      <td>55</td>\n","      <td>pria</td>\n","      <td>asma</td>\n","      <td>0</td>\n","      <td>15.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>19</td>\n","      <td>175</td>\n","      <td>57</td>\n","      <td>pria</td>\n","      <td>demam</td>\n","      <td>2</td>\n","      <td>13.928388</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>20</td>\n","      <td>177</td>\n","      <td>58</td>\n","      <td>pria</td>\n","      <td>pusing</td>\n","      <td>4</td>\n","      <td>13.892444</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eaee3971-43fb-4a8f-915e-525ad4df1f0f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eaee3971-43fb-4a8f-915e-525ad4df1f0f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eaee3971-43fb-4a8f-915e-525ad4df1f0f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0eff67fb-ba1b-4b27-bd94-6be0954ba994\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0eff67fb-ba1b-4b27-bd94-6be0954ba994')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0eff67fb-ba1b-4b27-bd94-6be0954ba994 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2341cca9-6b58-4f86-ac31-3409a7447404\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('disease_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2341cca9-6b58-4f86-ac31-3409a7447404 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('disease_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"disease_df","summary":"{\n  \"name\": \"disease_df\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"umur\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 19,\n        \"max\": 27,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          21,\n          20,\n          25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tinggi\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 155,\n        \"max\": 177,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          155,\n          157,\n          177\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"berat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 40,\n        \"max\": 58,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          40,\n          43,\n          58\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"jk\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"pria\",\n          \"wanita\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"penyakit\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"pilek\",\n          \"demam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"penyakit_encoded\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"jarak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.040816452956252,\n        \"min\": 13.892443989449804,\n        \"max\": 33.54101966249684,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          33.54101966249684,\n          29.966648127543394\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["x_test = np.array([[170, 55], [177, 58], [157, 43], [155, 40]])\n","y_test = lb.transform(np.array(['pria', 'pria', 'wanita', 'wanita'])).flatten()\n","print(f'x_test:\\n{x_test}\\n')\n","print(f'y_test: {y_test}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ntOfNUTfl3zB","executionInfo":{"status":"ok","timestamp":1732979389658,"user_tz":-420,"elapsed":278,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"cb42ebfb-9e06-4cb0-9102-f5844a47ca75"},"execution_count":98,"outputs":[{"output_type":"stream","name":"stdout","text":["x_test:\n","[[170  55]\n"," [177  58]\n"," [157  43]\n"," [155  40]]\n","\n","y_test: [0 0 1 1]\n"]}]},{"cell_type":"code","source":["y_pred = model.predict(x_test)\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vKkaEDOjnwWI","executionInfo":{"status":"ok","timestamp":1732979425777,"user_tz":-420,"elapsed":276,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"bf461c30-cd3e-47e9-913e-99bc0686f43b"},"execution_count":99,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 1, 1])"]},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","\n","acc = accuracy_score(y_test, y_pred)\n","print(f'Accuracy:{acc}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nxdLQ8Z9n4l7","executionInfo":{"status":"ok","timestamp":1732979599559,"user_tz":-420,"elapsed":262,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"5d4f2746-ceff-49c3-eceb-8c928767534f"},"execution_count":100,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy:1.0\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import precision_score\n","\n","prec = precision_score(y_test, y_pred)\n","\n","print(f'Precision: {prec}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XXqgcmF0oqJR","executionInfo":{"status":"ok","timestamp":1732979861312,"user_tz":-420,"elapsed":269,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"f5d534d5-a844-4ccd-9a4c-8ab1fefe22c1"},"execution_count":102,"outputs":[{"output_type":"stream","name":"stdout","text":["Precision: 1.0\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import recall_score\n","\n","rec = recall_score(y_test, y_pred)\n","\n","print(f'Recall: {rec}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BgOTz5AMpjzx","executionInfo":{"status":"ok","timestamp":1732980021344,"user_tz":-420,"elapsed":294,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"ff205869-36a6-4cf8-83a4-4c34aa9f6456"},"execution_count":103,"outputs":[{"output_type":"stream","name":"stdout","text":["Recall: 1.0\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import f1_score\n","\n","f1 = f1_score(y_test, y_pred)\n","\n","print(f'F1-Score: {f1}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XYYHNWjFqPCI","executionInfo":{"status":"ok","timestamp":1732980092816,"user_tz":-420,"elapsed":269,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"98e264c2-1ae9-42c8-feb2-079eaac50983"},"execution_count":104,"outputs":[{"output_type":"stream","name":"stdout","text":["F1-Score: 1.0\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","\n","cls_report = classification_report(y_test, y_pred)\n","\n","print(f'Classification Report:\\n{cls_report}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CJVie8q4qcj3","executionInfo":{"status":"ok","timestamp":1732980254692,"user_tz":-420,"elapsed":276,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"78912ca7-7151-4204-ad55-a6b6e636a356"},"execution_count":105,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00         2\n","           1       1.00      1.00      1.00         2\n","\n","    accuracy                           1.00         4\n","   macro avg       1.00      1.00      1.00         4\n","weighted avg       1.00      1.00      1.00         4\n","\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import matthews_corrcoef\n","\n","mcc = matthews_corrcoef(y_test, y_pred)\n","\n","print(f'MCC: {mcc}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4Eo2G3jWrX46","executionInfo":{"status":"ok","timestamp":1732980383548,"user_tz":-420,"elapsed":332,"user":{"displayName":"541231077 FEBI LIFIANI RAHAYU","userId":"10175900405314168058"}},"outputId":"ce467556-4ad6-4c14-823c-fb166ffbee35"},"execution_count":106,"outputs":[{"output_type":"stream","name":"stdout","text":["MCC: 1.0\n"]}]}]}